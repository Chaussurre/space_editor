use bevy_egui::egui;

pub const TRANSLATE: &str = "<svg fill=\"#f0f0f0\" viewBox=\"0 0 1024 1024\" xmlns=\"http://www.w3.org/2000/svg\" stroke=\"#f0f0f0\"><g id=\"SVGRepo_bgCarrier\" stroke-width=\"0\"></g><g id=\"SVGRepo_tracerCarrier\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></g><g id=\"SVGRepo_iconCarrier\"><path d=\"M1016.4 496.64l-8.48-8.08c-.16-.16-.335-.224-.528-.367L877.648 369.76c-9.344-8.945-24.448-8.945-33.824 0l-5.488 8.064c-9.344 8.945-6.304 23.408 3.04 32.336l76.464 69.344H546.496V106.16l69.343 76.464c8.945 9.344 23.409 12.384 32.336 3.023l8.065-5.471c8.944-9.376 8.944-24.481 0-33.841L543.072 22.368a31.874 31.874 0 0 0-12.32-13.296l-1.423-1.488C524.897 2.912 518.993.576 513.105.608c-5.904-.032-11.776 2.304-16.288 6.976l-8.096 8.463c-.16.16-.176.369-.336.544L372.881 144.335c-8.927 9.329-8.927 24.449 0 33.825l8.065 5.471c8.928 9.344 23.424 6.32 32.368-3.024l69.152-77.105v375.984H106.162l76.464-69.343c9.344-8.945 12.384-23.409 3.04-32.336l-5.471-8.065c-9.36-8.944-24.497-8.944-33.84 0L22.37 482.926a31.957 31.957 0 0 0-13.28 12.29l-1.489 1.423C2.914 501.087.593 506.992.626 512.88c-.016 5.905 2.288 11.777 6.976 16.288l8.464 8.096c.16.16.368.176.528.336l127.744 115.504c9.344 8.928 24.464 8.928 33.84 0l5.472-8.064c9.344-8.945 6.304-23.44-3.04-32.369l-77.12-69.152h379.008v376.96l-69.153-77.103c-8.944-9.344-23.44-12.369-32.368-3.025l-8.064 5.472c-8.928 9.376-8.928 24.496 0 33.824l115.504 127.744c.16.176.192.368.336.528l8.095 8.48c4.512 4.673 10.384 7.009 16.288 6.976 5.873.033 11.777-2.303 16.225-6.975l8.096-8.48c.16-.16.224-.337.368-.529l118.432-129.744c8.944-9.344 8.944-24.464 0-33.824l-8.065-5.488c-8.944-9.344-23.408-6.304-32.335 3.04l-69.344 76.464V543.502H920.48l-77.105 69.152c-9.343 8.944-12.368 23.44-3.024 32.368l5.472 8.064c9.376 8.928 24.496 8.928 33.824 0l127.744-115.504c.176-.175.368-.19.528-.334l8.48-8.096c4.672-4.496 7.008-10.368 6.976-16.288.032-5.857-2.304-11.777-6.975-16.225z\"></path></g></svg>";
pub const ROTATION: &str = "<svg viewBox=\"0 0 24 24\" id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"#000000\" stroke=\"#000000\"><g id=\"SVGRepo_bgCarrier\" stroke-width=\"0\"></g><g id=\"SVGRepo_tracerCarrier\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></g><g id=\"SVGRepo_iconCarrier\"><defs><style>.cls-1{fill:none;stroke:#f0f0f0;stroke-miterlimit:10;stroke-width:1.95px;}</style></defs><path class=\"cls-1\" d=\"M14.37,20.55c-.66,1.38-1.48,2.2-2.37,2.2-1.69,0-3.13-2.95-3.66-7.09A25,25,0,0,1,8.09,12a25,25,0,0,1,.25-3.66c.53-4.14,2-7.09,3.66-7.09s3.13,3,3.66,7.09A22.48,22.48,0,0,1,15.89,11\"></path><path class=\"cls-1\" d=\"M13.9,15.85l-.92,0-1,0-1,0a22.48,22.48,0,0,1-2.68-.23c-4.14-.53-7.09-2-7.09-3.66s3-3.13,7.09-3.66A25,25,0,0,1,12,8.09a26.79,26.79,0,0,1,3.17.18l.49.07c4.14.53,7.09,2,7.09,3.66,0,.89-.82,1.71-2.2,2.37\"></path><polyline class=\"cls-1\" points=\"12 12.98 14.93 15.91 12 18.84\"></polyline></g></svg>";
pub const SCALE: &str = "<svg viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><g id=\"SVGRepo_bgCarrier\" stroke-width=\"0\"></g><g id=\"SVGRepo_tracerCarrier\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></g><g id=\"SVGRepo_iconCarrier\"> <path d=\"M14 22H6.8M6.8 22C5.11984 22 4.27976 22 3.63803 21.673C3.07354 21.3854 2.6146 20.9265 2.32698 20.362C2 19.7202 2 18.8802 2 17.2M6.8 22H7.2C8.88016 22 9.72024 22 10.362 21.673C10.9265 21.3854 11.3854 20.9265 11.673 20.362C12 19.7202 12 18.8802 12 17.2V16.8C12 15.1198 12 14.2798 11.673 13.638C11.3854 13.0735 10.9265 12.6146 10.362 12.327C9.72024 12 8.88016 12 7.2 12H6.8C5.11984 12 4.27976 12 3.63803 12.327C3.07354 12.6146 2.6146 13.0735 2.32698 13.638C2 14.2798 2 15.1198 2 16.8V17.2M2 17.2V10M10 2H14M22 10V14M18 22C18.93 22 19.395 22 19.7765 21.8978C20.8117 21.6204 21.6204 20.8117 21.8978 19.7765C22 19.395 22 18.93 22 18M22 6C22 5.07003 22 4.60504 21.8978 4.22354C21.6204 3.18827 20.8117 2.37962 19.7765 2.10222C19.395 2 18.93 2 18 2M6 2C5.07003 2 4.60504 2 4.22354 2.10222C3.18827 2.37962 2.37962 3.18827 2.10222 4.22354C2 4.60504 2 5.07003 2 6\" stroke=\"#f0f0f0\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path> </g></svg>";
pub const ENTITY: &str = "<svg width=\"25\" height=\"25\" viewBox=\"0 0 25 25\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M23.3695 18.785L12.5833 24.286V20.0002L19.3042 16.6657L23.3695 18.785ZM24.109 18.182V6.67333L20.1604 8.72998V16.1253L24.109 18.182ZM0.848505 18.785L11.6347 24.286V20.0002L4.91386 16.6657L0.848505 18.785ZM0.109009 18.182V6.67333L4.05766 8.72998V16.1253L0.109009 18.182ZM0.571194 5.92829L11.6347 0.286011V4.43062L4.49556 7.97227L0.571194 5.92829ZM23.6468 5.92829L12.5833 0.286011V4.43062L19.7225 7.97227L23.6468 5.92829ZM11.6347 19.0277L5.0063 15.7372V9.22301L11.6347 12.6759V19.0277ZM12.5833 19.0277L19.2117 15.7372V9.22301L12.5833 12.6759V19.0277ZM5.45355 8.47037L12.1109 5.17142L18.7682 8.47037L12.1109 11.9367L5.45355 8.47037Z\" fill=\"#F0F0F0\"/></svg>";
pub const BUNDLE: &str = "<svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><g clip-path=\"url(#clip0_44_6579)\"><path d=\"M21.62 5.56667L12.9533 1.42667C12.8629 1.38298 12.7638 1.36029 12.6633 1.36029C12.5629 1.36029 12.4638 1.38298 12.3733 1.42667L2.37334 6.25334C2.25989 6.30737 2.16402 6.39236 2.09679 6.49852C2.02955 6.60468 1.99369 6.72768 1.99334 6.85334V17.8867C1.99288 18.0168 2.03051 18.1442 2.10159 18.2532C2.17267 18.3622 2.27408 18.448 2.39334 18.5L11.06 22.6267C11.1504 22.6704 11.2496 22.6931 11.35 22.6931C11.4504 22.6931 11.5496 22.6704 11.64 22.6267L21.64 17.8C21.7535 17.746 21.8493 17.661 21.9166 17.5548C21.9838 17.4487 22.0196 17.3257 22.02 17.2V6.16667C22.0179 6.03883 21.979 5.9143 21.9081 5.80792C21.8372 5.70154 21.7372 5.61779 21.62 5.56667ZM12.6667 2.76667L19.9533 6.24667L16.5867 7.87334L9.47334 4.30667L12.6667 2.76667ZM11.3333 10.4267L4 6.94L7.93334 5.04L15.0667 8.60667L11.3333 10.4267ZM3.33334 8.08667L10.6667 11.6V20.9733L3.33334 17.4667V8.08667ZM12 20.9667V11.5733L20.6667 7.38V16.78L12 20.9667Z\" fill=\"#F0F0F0\"/></g><defs><clipPath id=\"clip0_44_6579\"><rect width=\"24\" height=\"24\" fill=\"white\"/></clipPath></defs></svg>";
pub const COMPONENT: &str = "<svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M3.40202 8.60115L1.20077 10.8024C1.04308 10.9638 0.918714 11.1546 0.83478 11.364C0.750845 11.5734 0.708984 11.7973 0.711585 12.0229C0.714187 12.2485 0.7612 12.4714 0.849942 12.6788C0.938683 12.8862 1.06741 13.0741 1.22878 13.2318L3.27795 15.281C3.43562 15.4423 3.62353 15.5711 3.83095 15.6598C4.03838 15.7485 4.26125 15.7956 4.48684 15.7982C4.71244 15.8008 4.93633 15.7589 5.14575 15.675C5.35516 15.591 5.54599 15.4667 5.70734 15.309L7.9086 13.1077C8.06628 12.9464 8.19065 12.7555 8.27458 12.5461C8.35852 12.3367 8.40038 12.1128 8.39778 11.8872C8.39517 11.6616 8.34816 11.4388 8.25942 11.2313C8.17068 11.0239 8.04195 10.836 7.88058 10.6783L5.82941 8.62717C5.51079 8.30214 5.07621 8.11685 4.6211 8.11197C4.16598 8.1071 3.72753 8.28303 3.40202 8.60115ZM5.67932 12.8796L5.47921 13.0797C5.20337 13.3322 4.84075 13.4685 4.46689 13.4603C4.09303 13.452 3.73677 13.2998 3.47235 13.0354C3.20793 12.771 3.05573 12.4147 3.04748 12.0409C3.03922 11.667 3.17554 11.3044 3.42804 11.0285L3.62815 10.8284C3.76053 10.6838 3.92082 10.5675 4.09936 10.4865C4.2779 10.4055 4.471 10.3616 4.667 10.3572C4.863 10.3529 5.05785 10.3883 5.2398 10.4613C5.42174 10.5344 5.58701 10.6435 5.72564 10.7821C5.86427 10.9207 5.97338 11.086 6.0464 11.2679C6.11942 11.4499 6.15484 11.6447 6.15051 11.8407C6.14618 12.0367 6.1022 12.2298 6.02122 12.4084C5.94024 12.5869 5.82394 12.7472 5.67932 12.8796Z\" fill=\"#F0F0F0\"/><path d=\"M11.5107 9.5057L13.7119 7.30444C13.8696 7.14309 13.994 6.95226 14.0779 6.74285C14.1618 6.53343 14.2037 6.30954 14.2011 6.08394C14.1985 5.85835 14.1515 5.63548 14.0627 5.42806C13.974 5.22063 13.8453 5.03272 13.6839 4.87505L11.6327 2.82388C11.3137 2.49955 10.8793 2.31473 10.4244 2.30986C9.96951 2.30498 9.5312 2.48044 9.20534 2.79787L7.00408 4.99912C6.84639 5.16047 6.72203 5.3513 6.63809 5.56071C6.55416 5.77013 6.5123 5.99403 6.5149 6.21962C6.5175 6.44521 6.56451 6.66808 6.65326 6.87551C6.742 7.08293 6.87073 7.27084 7.0321 7.42851L9.08127 9.47768C9.23894 9.63905 9.42685 9.76778 9.63427 9.85652C9.84169 9.94526 10.0646 9.99228 10.2902 9.99488C10.5158 9.99748 10.7396 9.95562 10.9491 9.87168C11.1585 9.78775 11.3493 9.66339 11.5107 9.5057ZM9.23135 5.22525L9.43147 5.02514C9.7073 4.77264 10.0699 4.63632 10.4438 4.64458C10.8176 4.65283 11.1739 4.80503 11.4383 5.06945C11.7027 5.33387 11.8549 5.69013 11.8632 6.06399C11.8715 6.43785 11.7351 6.80047 11.4826 7.07631L11.2825 7.27642C11.0067 7.52892 10.6441 7.66524 10.2702 7.65698C9.89634 7.64873 9.54009 7.49653 9.27567 7.23211C9.01124 6.96769 8.85905 6.61143 8.85079 6.23757C8.84254 5.86371 8.97886 5.50109 9.23135 5.22525Z\" fill=\"#F0F0F0\"/><path d=\"M9.13728 14.3364L6.93603 16.5377C6.6179 16.8643 6.44238 17.3037 6.44801 17.7596C6.45364 18.2155 6.63995 18.6505 6.96604 18.9691L9.00521 21.0082C9.32401 21.3345 9.75915 21.5211 10.2153 21.5271C10.6714 21.5331 11.1113 21.358 11.4386 21.0403L13.6399 18.839C13.9576 18.5117 14.1327 18.0718 14.1267 17.6157C14.1207 17.1596 13.9341 16.7244 13.6078 16.4056L11.5687 14.3665C11.2501 14.0404 10.8151 13.8541 10.3592 13.8484C9.90332 13.8428 9.46385 14.0183 9.13728 14.3364ZM11.4066 18.6069L11.2065 18.807C10.9284 19.0349 10.5755 19.1513 10.2164 19.1335C9.85732 19.1157 9.51765 18.9651 9.26342 18.7109C9.0092 18.4566 8.85856 18.117 8.8408 17.7579C8.82303 17.3988 8.93941 17.0459 9.1673 16.7678L9.36742 16.5677C9.6455 16.3398 9.99837 16.2234 10.3575 16.2412C10.7166 16.259 11.0562 16.4096 11.3105 16.6638C11.5647 16.9181 11.7153 17.2577 11.7331 17.6168C11.7508 17.9759 11.6345 18.3288 11.4066 18.6069Z\" fill=\"#F0F0F0\"/><path d=\"M20.0975 8.44704C19.9154 8.57712 19.7593 8.7332 19.5752 8.86528C19.5602 8.87755 19.5413 8.88408 19.5218 8.88372C19.5024 8.88335 19.4838 8.87611 19.4692 8.86328C19.2392 8.74899 19.0034 8.64679 18.7628 8.5571L18.6827 8.47706C18.6267 8.26494 18.6147 8.00879 18.5687 7.79067C18.5582 7.72165 18.5225 7.65896 18.4686 7.61463C18.4146 7.5703 18.3462 7.54747 18.2765 7.55053L17.2219 7.53652C17.1538 7.53974 17.0891 7.56746 17.0398 7.61457C17.004 7.67062 16.9777 7.73213 16.9617 7.79667C16.9097 8.00879 16.9137 8.27294 16.8557 8.49107C16.8488 8.49797 16.8449 8.50732 16.8449 8.51708C16.8449 8.52684 16.8488 8.5362 16.8557 8.5431L16.8297 8.56911C16.5955 8.69919 16.3574 8.7212 16.1233 8.85127C16.1088 8.86473 16.0896 8.87205 16.0698 8.87167C16.0501 8.8713 16.0312 8.86327 16.0172 8.84927C15.8311 8.71519 15.697 8.58112 15.5109 8.44704C15.4693 8.39976 15.4143 8.36622 15.3532 8.35085C15.2921 8.33549 15.2278 8.33902 15.1687 8.36099C15.14 8.35849 15.1113 8.36708 15.0887 8.38501L14.3282 9.14544C14.2794 9.18694 14.2439 9.24193 14.2262 9.30353C14.2262 9.40759 14.2262 9.56768 14.3062 9.64773C14.4545 9.80471 14.5891 9.97409 14.7085 10.154C14.7213 10.1686 14.7285 10.1873 14.7289 10.2067C14.7293 10.2261 14.7227 10.245 14.7105 10.2601C14.5804 10.4942 14.5584 10.7323 14.4283 10.9665L14.4023 10.9925C14.3763 11.0185 14.3763 11.0185 14.3242 11.0185C14.0921 11.0425 13.862 11.0805 13.6298 11.1246C13.5955 11.122 13.561 11.1278 13.5293 11.1414C13.4976 11.155 13.4696 11.176 13.4477 11.2026C13.3697 11.2807 13.3957 11.3067 13.3437 11.4107L13.3577 12.4653C13.3546 12.5351 13.3775 12.6035 13.4218 12.6574C13.4661 12.7113 13.5288 12.747 13.5978 12.7575C13.8099 12.8135 14.0401 12.7995 14.2842 12.8716C14.3027 12.8718 14.3204 12.8792 14.3335 12.8923C14.3466 12.9054 14.3541 12.9231 14.3543 12.9416C14.4883 13.1797 14.5184 13.4179 14.6604 13.648C14.6733 13.6626 14.6805 13.6813 14.6809 13.7007C14.6812 13.7201 14.6747 13.739 14.6624 13.7541C14.5304 13.9382 14.4003 14.0682 14.2702 14.2504C14.2271 14.2989 14.2002 14.3596 14.193 14.4241C14.1858 14.4886 14.1988 14.5537 14.2302 14.6106L15.1407 15.5211C15.262 15.545 15.3878 15.531 15.5009 15.4811C15.6545 15.336 15.8206 15.2047 15.9972 15.0888C16.012 15.076 16.031 15.0691 16.0506 15.0695C16.0702 15.0698 16.089 15.0774 16.1033 15.0908C16.3414 15.2249 16.5795 15.2549 16.8097 15.397C16.8377 15.425 16.8897 15.425 16.8897 15.4771C16.9457 15.6892 16.9577 15.9453 17.0038 16.1634C17.0139 16.2332 17.0496 16.2966 17.104 16.3414C17.1584 16.3862 17.2276 16.4091 17.2979 16.4056L18.3505 16.4176C18.4566 16.4196 18.4826 16.3936 18.5607 16.3155C18.5967 16.2591 18.6224 16.1968 18.6367 16.1314C18.6595 15.8988 18.6956 15.6676 18.7448 15.439C18.7708 15.413 18.7428 15.385 18.7688 15.359L18.7948 15.333C19.0309 15.2049 19.2671 15.1809 19.5032 15.0528C19.5177 15.0393 19.5368 15.032 19.5566 15.0324C19.5764 15.0328 19.5953 15.0408 19.6093 15.0548C19.7954 15.1889 19.9555 15.349 20.1416 15.4831C20.3277 15.6171 20.4077 15.5891 20.5278 15.469L21.2842 14.7126C21.4163 14.5805 21.4143 14.4745 21.2982 14.3264C21.1822 14.1783 21.0041 13.9802 20.87 13.7941C20.8638 13.7856 20.8594 13.7758 20.8572 13.7655C20.8549 13.7552 20.8548 13.7446 20.8569 13.7342C20.859 13.7239 20.8632 13.7141 20.8692 13.7055C20.8752 13.6968 20.883 13.6895 20.892 13.684C20.9977 13.453 21.0913 13.2165 21.1721 12.9756L21.1982 12.9496C21.2051 12.9427 21.2144 12.9388 21.2242 12.9388C21.2339 12.9388 21.2433 12.9427 21.2502 12.9496C21.4603 12.8996 21.7225 12.9016 21.9426 12.8415C22.0111 12.8393 22.0766 12.8123 22.1267 12.7655C22.1787 12.7135 22.1787 12.6614 22.2288 12.5554L22.2167 11.5028C22.2167 11.4333 22.1925 11.366 22.1484 11.3123C22.1042 11.2587 22.0428 11.222 21.9746 11.2086C21.7645 11.1546 21.5344 11.1686 21.2882 11.0946C21.2697 11.0944 21.252 11.0869 21.2389 11.0738C21.2258 11.0607 21.2184 11.043 21.2182 11.0245C21.0841 10.7864 21.0541 10.5482 20.912 10.3181C20.8986 10.3038 20.891 10.285 20.8906 10.2655C20.8903 10.2459 20.8972 10.2268 20.91 10.212C21.0421 10.0279 21.1982 9.87185 21.3282 9.68975C21.4583 9.50765 21.4303 9.4276 21.2962 9.29352L20.5418 8.53909C20.3577 8.34698 20.2556 8.34498 20.0975 8.44704ZM19.0189 13.1597C18.7107 13.4701 18.2921 13.6456 17.8547 13.6478C17.4174 13.6501 16.997 13.4789 16.6856 13.1717L16.6436 13.1297C16.3532 12.8143 16.196 12.3989 16.2048 11.9702C16.2137 11.5416 16.3879 11.133 16.691 10.8298C16.9942 10.5267 17.4028 10.3525 17.8314 10.3436C18.2601 10.3348 18.6755 10.492 18.9909 10.7824C19.2943 11.1022 19.4658 11.5248 19.471 11.9656C19.4762 12.4064 19.3147 12.8329 19.0189 13.1597Z\" fill=\"#F0F0F0\"/></svg>";
pub const CLEAR: &str = "<svg width=\"23\" height=\"24\" viewBox=\"0 0 23 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M6.8125 3C6.8125 1.34315 8.21161 0 9.9375 0H13.0625C14.7884 0 16.1875 1.34315 16.1875 3V4.5H20.875C21.738 4.5 22.4375 5.17158 22.4375 6C22.4375 6.82842 21.738 7.5 20.875 7.5H20.6347L19.5344 21.2301C19.4092 22.7931 18.0516 24 16.4186 24H6.58134C4.94842 24 3.5908 22.7931 3.46555 21.2301L2.36539 7.5H2.125C1.26206 7.5 0.5625 6.82842 0.5625 6C0.5625 5.17158 1.26206 4.5 2.125 4.5H6.8125V3ZM9.9375 4.5H13.0625V3H9.9375V4.5ZM5.49961 7.5L6.58134 21H16.4186L17.5003 7.5H5.49961Z\" fill=\"#F0F0F0\" stroke=\"black\"/></svg>";
pub const LIGHT: &str = "<svg viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><g id=\"SVGRepo_bgCarrier\" stroke-width=\"0\"></g><g id=\"SVGRepo_tracerCarrier\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></g><g id=\"SVGRepo_iconCarrier\"> <g clip-path=\"url(#f0f0f0a)\" stroke=\"#f0f0f0\" stroke-width=\"1.5\" stroke-miterlimit=\"10\"> <path d=\"M5 12H1M23 12h-4M7.05 7.05 4.222 4.222M19.778 19.778 16.95 16.95M7.05 16.95l-2.828 2.828M19.778 4.222 16.95 7.05\" stroke-linecap=\"round\"></path> <path d=\"M12 16a4 4 0 1 0 0-8 4 4 0 0 0 0 8Z\" fill=\"#f0f0f0\" fill-opacity=\".16\"></path> <path d=\"M12 19v4M12 1v4\" stroke-linecap=\"round\"></path> </g> <defs> <clipPath id=\"a\"> <path fill=\"#f0f0f0fffff\" d=\"M0 0h24v24H0z\"></path> </clipPath> </defs> </g></svg>";
pub const CAMERA: &str = "<svg viewBox=\"0 0 32 32\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><g id=\"SVGRepo_bgCarrier\" stroke-width=\"0\"></g><g id=\"SVGRepo_tracerCarrier\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></g><g id=\"SVGRepo_iconCarrier\"> <g clip-path=\"url(#clip0_901_1629)\"> <path d=\"M17 20C18.104 20 19 20.896 19 22C19 23.104 18.104 24 17 24C15.896 24 15 23.104 15 22C15 20.896 15.896 20 17 20ZM17 20H9M9 20C10.104 20 11 20.896 11 22C11 23.104 10.104 24 9 24C7.896 24 7 23.104 7 22C7 20.896 7.896 20 9 20ZM28 18L29.76 17.24C29.76 17.24 31 16.375 31 18V26C31 27.547 29.747 26.849 29.747 26.849L25 25V30C25 30.553 24.553 31 24 31H2C1.447 31 1 30.553 1 30V14C1 13.447 1.447 13 2 13H24C24.553 13 25 13.447 25 14V22M20.9727 10C22.1967 9.089 22.9997 7.644 22.9997 6C22.9997 3.238 20.7617 1 17.9997 1C15.2387 1 12.9997 3.238 12.9997 6M12.9997 6C12.9997 7.644 13.8037 9.089 15.0277 10M12.9997 6C12.9997 7.644 12.1967 9.089 10.9727 10M12.9997 6C12.9997 3.238 10.7617 1 7.9997 1C5.2387 1 2.9997 3.238 2.9997 6C2.9997 7.644 3.8037 9.089 5.0277 10\" stroke=\"#f0f0f0\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path> </g> <defs> <clipPath id=\"clip0_901_1629\"> <rect width=\"32\" height=\"32\" fill=\"white\"></rect> </clipPath> </defs> </g></svg>";
pub const MESH: &str = "<svg fill=\"#F0f0f0\" height=\"200px\" width=\"200px\" version=\"1.1\" id=\"Layer_1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" viewBox=\"0 0 512 512\" xml:space=\"preserve\" stroke=\"#F0f0f0\"><g id=\"SVGRepo_bgCarrier\" stroke-width=\"0\"></g><g id=\"SVGRepo_tracerCarrier\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></g><g id=\"SVGRepo_iconCarrier\"> <g> <g> <g> <path d=\"M502,82H10C4.477,82,0,86.477,0,92v328c0,5.523,4.477,10,10,10h492c5.522,0,10-4.477,10-10V92 C512,86.477,507.522,82,502,82z M492,101.998v122.095c-22.047,2.517-79.35,8.821-101.04,8.908 c-0.36,0.001-0.72,0.002-1.084,0.002c-1.259,0-2.554-0.012-3.865-0.028c-2.177-15.653-5.677-32.265-10.852-49.806 c-1.563-5.296-7.123-8.324-12.421-6.761c-5.297,1.563-8.324,7.124-6.761,12.421c4.499,15.247,7.636,29.712,9.704,43.394 c-25.189-1.418-55.196-4.552-82.595-7.546c-5.489-0.598-10.427,3.364-11.026,8.854c-0.601,5.49,3.364,10.427,8.854,11.027 c30.127,3.292,61.116,6.517,87.106,7.828c2.761,34.525-1.387,63.222-7.61,85.518c-28.47-1.819-62.974-5.632-96.637-9.357 c-27.069-2.995-54.661-6.049-79.426-8.096c5.024-27.942,5.393-57.423,1.069-87.905c-5.938-41.86-20.789-85.712-44.189-130.548 H492z M388.136,252.996c0.571,0.003,1.145,0.007,1.707,0.007c0.4,0,0.801-0.001,1.197-0.002 c22.206-0.089,77.162-6.066,100.96-8.774v85.865c-22.047,2.517-79.35,8.821-101.04,8.908c-3.199,0.012-6.581-0.034-10.111-0.129 C386.823,315.776,390.603,286.985,388.136,252.996z M20,241.929c23.992-2.69,90.173-9.854,115.03-9.928 c5.522-0.017,9.986-4.507,9.97-10.03c-0.016-5.513-4.49-9.97-10-9.97c-0.01,0-0.021,0-0.03,0 c-25.393,0.075-89.028,6.897-114.97,9.799V102h98.528c42.316,77.34,58.009,151.94,45.744,216.995 c-10.702-0.653-20.589-1.022-29.302-0.995c-25.393,0.075-89.028,6.897-114.97,9.799V241.929z M20,410v-62.072 c23.992-2.69,90.173-9.854,115.03-9.928c0.272-0.001,0.541-0.001,0.816-0.001c7.14,0,15.131,0.275,23.751,0.756 c-11.199,39.14-30.086,63.35-36.976,71.245H20z M147.976,410c10.115-14.388,23.423-37.744,31.98-69.838 c25.146,2.018,53.664,5.173,81.618,8.266c31.854,3.525,64.427,7.128,92.31,9.085c-10.948,28.149-24.942,45.931-30.671,52.487 H147.976z M492,410H348.552c7.417-10.556,16.559-25.928,24.289-46.034c0.656-1.705,1.303-3.478,1.946-5.284 c5.318,0.206,10.37,0.321,15.084,0.321c0.391,0,0.783-0.001,1.169-0.002c22.206-0.089,77.162-6.066,100.96-8.774V410z\"></path> <path d=\"M213.988,237.302c8.03,0.817,16.904,1.758,27.927,2.961c0.369,0.04,0.735,0.06,1.098,0.06 c5.036,0,9.37-3.794,9.929-8.916c0.6-5.49-3.365-10.427-8.855-11.026c-11.073-1.209-19.994-2.155-28.073-2.977 c-5.493-0.558-10.402,3.442-10.961,8.937C204.493,231.835,208.494,236.743,213.988,237.302z\"></path> <path d=\"M345.276,157.631c1.541,3.952,5.318,6.369,9.319,6.369c1.208,0,2.437-0.221,3.631-0.687 c5.146-2.007,7.689-7.805,5.683-12.95c-3.81-9.768-8.109-19.738-12.78-29.634c-2.356-4.995-8.32-7.134-13.311-4.775 c-4.995,2.357-7.133,8.317-4.775,13.312C337.518,138.747,341.634,148.291,345.276,157.631z\"></path> </g> </g> </g> </g></svg>";

pub fn rotatio_icon<'a>(x_size: f32, y_size: f32, text: &str) -> egui::Button<'a> {
    let image = egui::Image::from_bytes("rotatio.svg", crate::icons::ROTATION.as_bytes())
        .max_size(bevy_egui::egui::vec2(x_size, y_size));
    if text.is_empty() {
        egui::Button::image(image)
    } else {
        egui::Button::image_and_text(image, text)
    }
}

pub fn scale_icon<'a>(x_size: f32, y_size: f32, text: &str) -> egui::Button<'a> {
    let image = egui::Image::from_bytes("scale.svg", crate::icons::SCALE.as_bytes())
        .max_size(bevy_egui::egui::vec2(x_size, y_size));
    if text.is_empty() {
        egui::Button::image(image)
    } else {
        egui::Button::image_and_text(image, text)
    }
}

pub fn entity_icon<'a>(x_size: f32, y_size: f32, text: &str) -> egui::Button<'a> {
    let image = egui::Image::from_bytes("entity.svg", crate::icons::ENTITY.as_bytes())
        .max_size(bevy_egui::egui::vec2(x_size, y_size));
    if text.is_empty() {
        egui::Button::image(image)
    } else {
        egui::Button::image_and_text(image, text)
    }
}

pub fn component_icon<'a>(x_size: f32, y_size: f32, text: &str) -> egui::Button<'a> {
    let image = egui::Image::from_bytes("component.svg", crate::icons::COMPONENT.as_bytes())
        .max_size(bevy_egui::egui::vec2(x_size, y_size));
    if text.is_empty() {
        egui::Button::image(image)
    } else {
        egui::Button::image_and_text(image, text)
    }
}

pub fn clear_icon<'a>(x_size: f32, y_size: f32, text: &str) -> egui::Button<'a> {
    let image = egui::Image::from_bytes("clear.svg", crate::icons::CLEAR.as_bytes())
        .max_size(bevy_egui::egui::vec2(x_size, y_size));
    if text.is_empty() {
        egui::Button::image(image)
    } else {
        egui::Button::image_and_text(image, text)
    }
}

pub fn light_icon<'a>(x_size: f32, y_size: f32, text: &str) -> egui::Button<'a> {
    let image = egui::Image::from_bytes("light.svg", crate::icons::LIGHT.as_bytes())
        .max_size(bevy_egui::egui::vec2(x_size, y_size));
    if text.is_empty() {
        egui::Button::image(image)
    } else {
        egui::Button::image_and_text(image, text)
    }
}

pub fn camera_icon<'a>(x_size: f32, y_size: f32, text: &str) -> egui::Button<'a> {
    let image = egui::Image::from_bytes("camera.svg", crate::icons::CAMERA.as_bytes())
        .max_size(bevy_egui::egui::vec2(x_size, y_size));
    if text.is_empty() {
        egui::Button::image(image)
    } else {
        egui::Button::image_and_text(image, text)
    }
}

pub fn mesh_icon<'a>(x_size: f32, y_size: f32, text: &str) -> egui::Button<'a> {
    let image = egui::Image::from_bytes("mesh.svg", crate::icons::MESH.as_bytes())
        .max_size(bevy_egui::egui::vec2(x_size, y_size));
    if text.is_empty() {
        egui::Button::image(image)
    } else {
        egui::Button::image_and_text(image, text)
    }
}

pub fn bundle_icon<'a>(x_size: f32, y_size: f32, text: &str) -> egui::Button<'a> {
    let image = egui::Image::from_bytes("bundle.svg", crate::icons::BUNDLE.as_bytes())
        .max_size(bevy_egui::egui::vec2(x_size, y_size));
    if text.is_empty() {
        egui::Button::image(image)
    } else {
        egui::Button::image_and_text(image, text)
    }
}

pub fn translate_icon<'a>(x_size: f32, y_size: f32, text: &str) -> egui::Button<'a> {
    let image = egui::Image::from_bytes("translate.svg", crate::icons::TRANSLATE.as_bytes())
        .max_size(bevy_egui::egui::vec2(x_size, y_size));
    if text.is_empty() {
        egui::Button::image(image)
    } else {
        egui::Button::image_and_text(image, text)
    }
}
